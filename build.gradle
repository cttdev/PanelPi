plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id 'org.hidetake.ssh' version '2.10.1'
    id "org.openjfx.javafxplugin" version "0.0.10"
    id "application"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

mainClassName = "net.panelpi.PanelPiApp"

apply from: "dependencies.gradle"

group 'net.panelpi'
version '1.0-beta-2'

sourceSets {
    main {
        kotlin {
            srcDirs = ["src/main/kotlin"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
    version = "11.0.2"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

wrapper {
    gradleVersion = "6.0.1"
}

// task fatJar(type: Jar) {
//     group = 'build'
//     manifest {
//         attributes 'Implementation-Title': 'Gradle Jar File Example',
//                 'Implementation-Version': version,
//                 'Main-Class': "net.panelpi.PanelPiApp"
//     }
//     baseName = project.name + '-all'
//     from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//     with jar
// }

// remotes {
//     pi {
//         host = 'panelpi'
//         user = 'pi'
//         identity = file("${System.getProperty("user.home")}/.ssh/id_rsa")
//     }
// }

// //     // gradle jfxNative
// //     nativeOutputDir = "build/jfx/native"
// //     bundler = "ALL" // set this to some specific, if your don't want all bundlers running, examples "windows.app", "jnlp", ...
// //     nativeReleaseVersion = "1.0"
// //     appName = "PanelPi" // this is used for files below "src/main/deploy", e.g. "src/main/deploy/package/windows/project.ico"
// //     vendor = 'PanalPi'
// // }

// task deployToPi(dependsOn: fatJar) {
//     group = 'raspberrypi'
//     doLast {
//         ssh.run {
//             session(remotes.pi) {
//                 //remove "piFeeder/piFeeder-${project.version}.jar"
//                 put from: "${buildDir}/libs/${project.name}-all-${project.version}.jar", into: "panelPi/panelPi.jar"
//             }
//         }
//     }
// }
// task runOnPi {
//     group = 'raspberrypi'
//     doLast {
//         ssh.run {
//             session(remotes.pi) {
//                 execute "sudo killall java || true"
//                 execute "sudo java " +
//                         "-Dprism.order=es2,es1,sw,j2d " +
//                         "-Dsun.java2d.opengl=true " +
//                         "-Dprism.vsync=false " +
//                         "-Dprism.forceGPU=true " +
//                         "-Djava.ext.dirs=/home/pi/jdk1.8.0_92/jre/lib/ext/ " +
//                         "-jar panelPi/panelPi.jar"
//             }
//         }
//     }
// }
